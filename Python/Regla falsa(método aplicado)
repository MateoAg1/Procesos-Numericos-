def punto_equilibrio_propuestas():
    def f(propuesta, unidades):
        # Valores para la propuesta A
        costos_fijos_A = 50000
        costos_variables_A = 12
        ingreso_A = 20

        # Valores para la propuesta B
        costos_fijos_B = 70000
        costos_variables_B = 10
        ingreso_B = 20

        if propuesta == 'A':
            costos_fijos = costos_fijos_A
            costos_variables = costos_variables_A
            ingreso = ingreso_A
        elif propuesta == 'B':
            costos_fijos = costos_fijos_B
            costos_variables = costos_variables_B
            ingreso = ingreso_B

        return ingreso * unidades - (costos_fijos + costos_variables * unidades)

    def regla_falsa(propuesta):
        a = 0  # Límite inferior
        b = 100000  # Límite superior
        epsilon = 0.01  # Precisión deseada

        fa = f(propuesta, a)
        fb = f(propuesta, b)

        if fa * fb >= 0:
            print("No se puede aplicar el método de la regla falsa en este rango.")
            return None

        while abs(b - a) >= epsilon:
            c = (a * fb - b * fa) / (fb - fa)
            fc = f(propuesta, c)

            if abs(fc) < epsilon:
                return c

            if fa * fc < 0:
                b = c
                fb = fc
            else:
                a = c
                fa = fc

        return (a + b) / 2

    punto_equilibrio_A = regla_falsa('A')
    punto_equilibrio_B = regla_falsa('B')

    return punto_equilibrio_A, punto_equilibrio_B

# Llamada a la función
equilibrio_A, equilibrio_B = punto_equilibrio_propuestas()

# Imprimir resultados
print("Punto de equilibrio en unidades para la propuesta A:", equilibrio_A)
print("Punto de equilibrio en unidades para la propuesta B:", equilibrio_B)
